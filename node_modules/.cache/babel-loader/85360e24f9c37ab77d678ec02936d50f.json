{"ast":null,"code":"var _jsxFileName = \"/Users/neotreks/Development/tonic-todo-app/src/pages/MainTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { AddTodoForm } from '../components/AddTodoForm';\nimport { TodoList } from '../components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todoWrapper = {\n  maxWidth: '500px',\n  width: '100%',\n  maxHeight: '700px',\n  height: '100%'\n};\nexport const MainTodo = () => {\n  _s();\n\n  const [todos, setTodos] = useState(() => {\n    const todosFromLocalState = localStorage.getItem('todos');\n\n    if (todosFromLocalState) {\n      return JSON.parse(todosFromLocalState);\n    } else {\n      return [];\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = text => {\n    const newTodo = {\n      text,\n      id: uuidv4()\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  const deleteTodo = todoId => {\n    const removeItem = todos.filter(todo => {\n      return todo.id !== todoId;\n    });\n    setTodos(removeItem);\n  };\n\n  const editTodo = edittedTodo => {\n    console.log(edittedTodo);\n    const updatedItem = todos.map(todo => {\n      return todo.id === edittedTodo.id ? edittedTodo : todo;\n    });\n    setTodos(updatedItem);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gradient-to-b from-blue-200  to-blue-400 h-screen w-100 flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: todoWrapper,\n      className: \" bg-gray-50 rounded-2xl m-2 p-6 shadow-xl flex flex-col gap-5 \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" text-3xl font-bold\",\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddTodoForm, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        deleteTodo: deleteTodo,\n        editTodo: editTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainTodo, \"n7QBV51RXY7yDkqaXHU552YQuDw=\");\n\n_c = MainTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainTodo\");","map":{"version":3,"sources":["/Users/neotreks/Development/tonic-todo-app/src/pages/MainTodo.tsx"],"names":["React","useState","useEffect","v4","uuidv4","AddTodoForm","TodoList","todoWrapper","maxWidth","width","maxHeight","height","MainTodo","todos","setTodos","todosFromLocalState","localStorage","getItem","JSON","parse","setItem","stringify","addTodo","text","newTodo","id","deleteTodo","todoId","removeItem","filter","todo","editTodo","edittedTodo","console","log","updatedItem","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAGA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE,OADQ;AAElBC,EAAAA,KAAK,EAAE,MAFW;AAGlBC,EAAAA,SAAS,EAAE,OAHO;AAIlBC,EAAAA,MAAM,EAAE;AAJU,CAApB;AAOA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,MAAM;AACvC,UAAMc,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA5B;;AACA,QAAIF,mBAAJ,EAAyB;AACvB,aAAOG,IAAI,CAACC,KAAL,CAAWJ,mBAAX,CAAP;AACD,KAFD,MAEO;AACL,aAAO,EAAP;AACD;AACF,GAPiC,CAAlC;AASAb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACG,SAAL,CAAeR,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,QAAMS,OAAgB,GAAIC,IAAD,IAAkB;AACzC,UAAMC,OAAO,GAAG;AAAED,MAAAA,IAAF;AAAQE,MAAAA,EAAE,EAAErB,MAAM;AAAlB,KAAhB;AACAU,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWW,OAAX,CAAD,CAAR;AACD,GAHD;;AAKA,QAAME,UAAU,GAAIC,MAAD,IAAoB;AACrC,UAAMC,UAAU,GAAGf,KAAK,CAACgB,MAAN,CAAcC,IAAD,IAAgB;AAC9C,aAAOA,IAAI,CAACL,EAAL,KAAYE,MAAnB;AACD,KAFkB,CAAnB;AAGAb,IAAAA,QAAQ,CAACc,UAAD,CAAR;AACD,GALD;;AAOA,QAAMG,QAAQ,GAAIC,WAAD,IAAuB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,UAAMG,WAAW,GAAGtB,KAAK,CAACuB,GAAN,CAAWN,IAAD,IAAgB;AAC5C,aAAOA,IAAI,CAACL,EAAL,KAAYO,WAAW,CAACP,EAAxB,GAA6BO,WAA7B,GAA2CF,IAAlD;AACD,KAFmB,CAApB;AAGAhB,IAAAA,QAAQ,CAACqB,WAAD,CAAR;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,6FAAf;AAAA,2BACE;AACE,MAAA,KAAK,EAAE5B,WADT;AAEE,MAAA,SAAS,EAAC,gEAFZ;AAAA,8BAIE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEe;AAAtB;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,QAAD;AAAU,QAAA,KAAK,EAAET,KAAjB;AAAwB,QAAA,UAAU,EAAEa,UAApC;AAAgD,QAAA,QAAQ,EAAEK;AAA1D;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA9CM;;GAAMnB,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { AddTodoForm } from '../components/AddTodoForm';\nimport { TodoList } from '../components/TodoList';\nimport { AddTodo, Todo } from '../models/types.d';\n\nconst todoWrapper = {\n  maxWidth: '500px',\n  width: '100%',\n  maxHeight: '700px',\n  height: '100%',\n};\n\nexport const MainTodo = () => {\n  const [todos, setTodos] = useState(() => {\n    const todosFromLocalState = localStorage.getItem('todos');\n    if (todosFromLocalState) {\n      return JSON.parse(todosFromLocalState);\n    } else {\n      return [];\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo: AddTodo = (text: string) => {\n    const newTodo = { text, id: uuidv4() };\n    setTodos([...todos, newTodo]);\n  };\n\n  const deleteTodo = (todoId: string) => {\n    const removeItem = todos.filter((todo: Todo) => {\n      return todo.id !== todoId;\n    });\n    setTodos(removeItem);\n  };\n\n  const editTodo = (edittedTodo: Todo) => {\n    console.log(edittedTodo);\n    const updatedItem = todos.map((todo: Todo) => {\n      return todo.id === edittedTodo.id ? edittedTodo : todo;\n    });\n    setTodos(updatedItem);\n  };\n\n  return (\n    <div className=\"bg-gradient-to-b from-blue-200  to-blue-400 h-screen w-100 flex justify-center items-center\">\n      <div\n        style={todoWrapper}\n        className=\" bg-gray-50 rounded-2xl m-2 p-6 shadow-xl flex flex-col gap-5 \"\n      >\n        <div className=\" text-3xl font-bold\">Todo App</div>\n        <AddTodoForm addTodo={addTodo} />\n        <TodoList todos={todos} deleteTodo={deleteTodo} editTodo={editTodo} />\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}